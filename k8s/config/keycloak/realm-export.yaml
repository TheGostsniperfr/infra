apiVersion: ricoberger.de/v1alpha1
kind: VaultSecret
metadata:
  name: keycloak-realm-secret
  namespace: keycloak
spec:
  path: secret/keycloak/epinaloa-realm-secret
  keys:
    - client-secret
  templates:
    realm-export.json: |
      {
        "id": "8580f4a4-8206-433e-9af5-356efa584c50",
        "realm": "epinaloa",
        "notBefore": 0,
        "defaultSignatureAlgorithm": "RS256",
        "revokeRefreshToken": false,
        "refreshTokenMaxReuse": 0,
        "accessTokenLifespan": 300,
        "accessTokenLifespanForImplicitFlow": 900,
        "ssoSessionIdleTimeout": 1800,
        "ssoSessionMaxLifespan": 36000,
        "ssoSessionIdleTimeoutRememberMe": 0,
        "ssoSessionMaxLifespanRememberMe": 0,
        "offlineSessionIdleTimeout": 2592000,
        "offlineSessionMaxLifespanEnabled": false,
        "offlineSessionMaxLifespan": 5184000,
        "clientSessionIdleTimeout": 0,
        "clientSessionMaxLifespan": 0,
        "clientOfflineSessionIdleTimeout": 0,
        "clientOfflineSessionMaxLifespan": 0,
        "accessCodeLifespan": 60,
        "accessCodeLifespanUserAction": 300,
        "accessCodeLifespanLogin": 1800,
        "actionTokenGeneratedByAdminLifespan": 43200,
        "actionTokenGeneratedByUserLifespan": 300,
        "oauth2DeviceCodeLifespan": 600,
        "oauth2DevicePollingInterval": 5,
        "enabled": true,
        "sslRequired": "external",
        "registrationAllowed": false,
        "registrationEmailAsUsername": false,
        "rememberMe": false,
        "verifyEmail": false,
        "loginWithEmailAllowed": true,
        "duplicateEmailsAllowed": false,
        "resetPasswordAllowed": false,
        "editUsernameAllowed": false,
        "bruteForceProtected": false,
        "permanentLockout": false,
        "maxTemporaryLockouts": 0,
        "maxFailureWaitSeconds": 900,
        "minimumQuickLoginWaitSeconds": 60,
        "waitIncrementSeconds": 60,
        "quickLoginCheckMilliSeconds": 1000,
        "maxDeltaTimeSeconds": 43200,
        "failureFactor": 30,
        "roles": {
          "realm": [
            {
              "id": "a8ffe4a8-5288-4d22-ae4b-f7567884ac10",
              "name": "manager",
              "description": "",
              "composite": false,
              "clientRole": false,
              "containerId": "8580f4a4-8206-433e-9af5-356efa584c50",
              "attributes": {}
            },
            {
              "id": "95256345-853c-4350-93bc-a28d2afdc5aa",
              "name": "user",
              "description": "",
              "composite": false,
              "clientRole": false,
              "containerId": "8580f4a4-8206-433e-9af5-356efa584c50",
              "attributes": {}
            },
            {
              "id": "3a1f8d86-c1fb-4b7f-a81d-855b6cb321c3",
              "name": "admin",
              "description": "",
              "composite": false,
              "clientRole": false,
              "containerId": "8580f4a4-8206-433e-9af5-356efa584c50",
              "attributes": {}
            },
            {
              "id": "690b37d0-8ea9-4b07-a4ae-8d1642e74a9f",
              "name": "uma_authorization",
              "description": "${role_uma_authorization}",
              "composite": false,
              "clientRole": false,
              "containerId": "8580f4a4-8206-433e-9af5-356efa584c50",
              "attributes": {}
            },
            {
              "id": "29d3c053-23ed-4187-9d36-7eb84c51f655",
              "name": "default-roles-epinaloa",
              "description": "${role_default-roles}",
              "composite": true,
              "composites": {
                "realm": [
                  "offline_access",
                  "uma_authorization"
                ],
                "client": {
                  "account": [
                    "manage-account",
                    "view-profile"
                  ]
                }
              },
              "clientRole": false,
              "containerId": "8580f4a4-8206-433e-9af5-356efa584c50",
              "attributes": {}
            },
            {
              "id": "f645b097-b533-4d37-bb71-86e3cb9d4819",
              "name": "offline_access",
              "description": "${role_offline-access}",
              "composite": false,
              "clientRole": false,
              "containerId": "8580f4a4-8206-433e-9af5-356efa584c50",
              "attributes": {}
            }
          ],
          "client": {
            "realm-management": [
              {
                "id": "3d0e693a-8198-45bf-bb11-fc96e1397a49",
                "name": "query-groups",
                "description": "${role_query-groups}",
                "composite": false,
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "c9d618ba-ee49-44d7-8e94-97c9df387fb5",
                "name": "view-realm",
                "description": "${role_view-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "e33f5104-2644-4480-87d2-715f38c0b624",
                "name": "view-identity-providers",
                "description": "${role_view-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "d8bfff0d-83b6-4b90-8633-861df32259cc",
                "name": "manage-realm",
                "description": "${role_manage-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "fee2d7b5-95af-4459-8dbc-11dd653ef178",
                "name": "manage-authorization",
                "description": "${role_manage-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "befcab67-9df2-40b4-bb11-36ded546a032",
                "name": "view-events",
                "description": "${role_view-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "391db846-248f-4d35-a15a-9de4e6f20f91",
                "name": "manage-clients",
                "description": "${role_manage-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "9db18745-60a3-4188-98fa-4760adc6b23e",
                "name": "manage-identity-providers",
                "description": "${role_manage-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "46bbd45c-757f-4e1f-9d51-5a9b00a5a25c",
                "name": "create-client",
                "description": "${role_create-client}",
                "composite": false,
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "15212954-11ab-4605-8966-9a6836bc8b27",
                "name": "manage-users",
                "description": "${role_manage-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "b1360292-cd79-4838-ad66-66f44cc77bc7",
                "name": "manage-events",
                "description": "${role_manage-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "9783556f-d31a-48e5-a5bd-4c9ad3dcd044",
                "name": "view-authorization",
                "description": "${role_view-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "a1fad2f8-e4ee-47b4-8f0c-775a2440beb9",
                "name": "query-users",
                "description": "${role_query-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "2e9d9295-0b82-4ccb-8f8a-0c6358a4f37d",
                "name": "view-users",
                "description": "${role_view-users}",
                "composite": true,
                "composites": {
                  "client": {
                    "realm-management": [
                      "query-groups",
                      "query-users"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "6e7bc057-5666-4ec1-a86d-54c5b2710e76",
                "name": "impersonation",
                "description": "${role_impersonation}",
                "composite": false,
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "c7477705-aed7-4285-a5ef-85669def0430",
                "name": "query-realms",
                "description": "${role_query-realms}",
                "composite": false,
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "8780ba7b-218f-461c-8d25-0acd3f0945dc",
                "name": "view-clients",
                "description": "${role_view-clients}",
                "composite": true,
                "composites": {
                  "client": {
                    "realm-management": [
                      "query-clients"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "2814d161-89f8-4f34-9bfa-923d89d79838",
                "name": "realm-admin",
                "description": "${role_realm-admin}",
                "composite": true,
                "composites": {
                  "client": {
                    "realm-management": [
                      "query-groups",
                      "view-realm",
                      "view-identity-providers",
                      "manage-realm",
                      "manage-authorization",
                      "view-events",
                      "manage-clients",
                      "manage-identity-providers",
                      "create-client",
                      "manage-users",
                      "manage-events",
                      "view-authorization",
                      "query-users",
                      "view-users",
                      "impersonation",
                      "query-realms",
                      "view-clients",
                      "query-clients"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              },
              {
                "id": "a7a0e94e-5ff5-4a97-ad6c-00a054f1b84b",
                "name": "query-clients",
                "description": "${role_query-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
                "attributes": {}
              }
            ],
            "epinaloa-backend-api": [],
            "epinaloa-frontend-client": [],
            "security-admin-console": [],
            "admin-cli": [],
            "account-console": [],
            "broker": [
              {
                "id": "17f9451a-d6bf-4367-aa00-9a626dbaa07b",
                "name": "read-token",
                "description": "${role_read-token}",
                "composite": false,
                "clientRole": true,
                "containerId": "c28e489f-6b73-4609-afe7-d29b0986438d",
                "attributes": {}
              }
            ],
            "epinaloa-backend-admin-client": [],
            "account": [
              {
                "id": "ea8e6894-c16a-4e91-972b-a9bfaa274827",
                "name": "delete-account",
                "description": "${role_delete-account}",
                "composite": false,
                "clientRole": true,
                "containerId": "6c2a9c64-4ff4-438e-8bfa-76f71fae78b5",
                "attributes": {}
              },
              {
                "id": "832be49a-e06a-4a14-a09a-74bff607558e",
                "name": "view-consent",
                "description": "${role_view-consent}",
                "composite": false,
                "clientRole": true,
                "containerId": "6c2a9c64-4ff4-438e-8bfa-76f71fae78b5",
                "attributes": {}
              },
              {
                "id": "599e03f5-7559-4131-a246-72f7368a1609",
                "name": "manage-account-links",
                "description": "${role_manage-account-links}",
                "composite": false,
                "clientRole": true,
                "containerId": "6c2a9c64-4ff4-438e-8bfa-76f71fae78b5",
                "attributes": {}
              },
              {
                "id": "eaf336ab-0ad1-4bba-a1fb-260d9ef1639e",
                "name": "view-applications",
                "description": "${role_view-applications}",
                "composite": false,
                "clientRole": true,
                "containerId": "6c2a9c64-4ff4-438e-8bfa-76f71fae78b5",
                "attributes": {}
              },
              {
                "id": "bae01b9a-af0c-4414-8bfa-8f1bfb21e822",
                "name": "manage-account",
                "description": "${role_manage-account}",
                "composite": true,
                "composites": {
                  "client": {
                    "account": [
                      "manage-account-links"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "6c2a9c64-4ff4-438e-8bfa-76f71fae78b5",
                "attributes": {}
              },
              {
                "id": "92f96da6-fedf-4042-a6f4-1c33151974ed",
                "name": "manage-consent",
                "description": "${role_manage-consent}",
                "composite": true,
                "composites": {
                  "client": {
                    "account": [
                      "view-consent"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "6c2a9c64-4ff4-438e-8bfa-76f71fae78b5",
                "attributes": {}
              },
              {
                "id": "153880b1-6511-4c08-9094-a415ca1ad81b",
                "name": "view-groups",
                "description": "${role_view-groups}",
                "composite": false,
                "clientRole": true,
                "containerId": "6c2a9c64-4ff4-438e-8bfa-76f71fae78b5",
                "attributes": {}
              },
              {
                "id": "f7247a73-0427-442a-be67-44ac213d31c0",
                "name": "view-profile",
                "description": "${role_view-profile}",
                "composite": false,
                "clientRole": true,
                "containerId": "6c2a9c64-4ff4-438e-8bfa-76f71fae78b5",
                "attributes": {}
              }
            ]
          }
        },
        "groups": [],
        "defaultRole": {
          "id": "29d3c053-23ed-4187-9d36-7eb84c51f655",
          "name": "default-roles-epinaloa",
          "description": "${role_default-roles}",
          "composite": true,
          "clientRole": false,
          "containerId": "8580f4a4-8206-433e-9af5-356efa584c50"
        },
        "requiredCredentials": [
          "password"
        ],
        "otpPolicyType": "totp",
        "otpPolicyAlgorithm": "HmacSHA1",
        "otpPolicyInitialCounter": 0,
        "otpPolicyDigits": 6,
        "otpPolicyLookAheadWindow": 1,
        "otpPolicyPeriod": 30,
        "otpPolicyCodeReusable": false,
        "otpSupportedApplications": [
          "totpAppFreeOTPName",
          "totpAppGoogleName",
          "totpAppMicrosoftAuthenticatorName"
        ],
        "localizationTexts": {},
        "webAuthnPolicyRpEntityName": "keycloak",
        "webAuthnPolicySignatureAlgorithms": [
          "ES256"
        ],
        "webAuthnPolicyRpId": "",
        "webAuthnPolicyAttestationConveyancePreference": "not specified",
        "webAuthnPolicyAuthenticatorAttachment": "not specified",
        "webAuthnPolicyRequireResidentKey": "not specified",
        "webAuthnPolicyUserVerificationRequirement": "not specified",
        "webAuthnPolicyCreateTimeout": 0,
        "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyAcceptableAaguids": [],
        "webAuthnPolicyExtraOrigins": [],
        "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
        "webAuthnPolicyPasswordlessSignatureAlgorithms": [
          "ES256"
        ],
        "webAuthnPolicyPasswordlessRpId": "",
        "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
        "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
        "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
        "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
        "webAuthnPolicyPasswordlessCreateTimeout": 0,
        "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyPasswordlessAcceptableAaguids": [],
        "webAuthnPolicyPasswordlessExtraOrigins": [],
        "users": [
          {
            "id": "6f3185d2-8cb9-4964-8d9e-e3b1ae175e17",
            "username": "service-account-epinaloa-backend-admin-client",
            "emailVerified": false,
            "createdTimestamp": 1750929788199,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "epinaloa-backend-admin-client",
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "default-roles-epinaloa"
            ],
            "clientRoles": {
              "realm-management": [
                "realm-admin"
              ]
            },
            "notBefore": 0,
            "groups": []
          }
        ],
        "scopeMappings": [
          {
            "clientScope": "offline_access",
            "roles": [
              "offline_access"
            ]
          }
        ],
        "clientScopeMappings": {
          "account": [
            {
              "client": "account-console",
              "roles": [
                "manage-account",
                "view-groups"
              ]
            }
          ]
        },
        "clients": [
          {
            "id": "6c2a9c64-4ff4-438e-8bfa-76f71fae78b5",
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/epinaloa/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/realms/epinaloa/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "0977c61d-4d42-413b-95ca-cd1d28003ceb",
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/epinaloa/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/realms/epinaloa/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+",
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "2d5aa2a0-174a-4777-85cf-03ca7dbf432f",
                "name": "audience resolve",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-resolve-mapper",
                "consentRequired": false,
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "7070e634-1801-4e7f-a491-a604e66a0fda",
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "c28e489f-6b73-4609-afe7-d29b0986438d",
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "0d44305d-1501-4bad-a7c5-18691b27541a",
            "clientId": "epinaloa-backend-admin-client",
            "name": "epinaloa Backend Admin Client",
            "description": "",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "{% .Secrets.client-secret %}"
            "redirectUris": [
              "/*"
            ],
            "webOrigins": [
              "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": true,
            "protocol": "openid-connect",
            "attributes": {
              "oidc.ciba.grant.enabled": "false",
              "client.secret.creation.time": "1750928793",
              "backchannel.logout.session.required": "true",
              "post.logout.redirect.uris": "+",
              "oauth2.device.authorization.grant.enabled": "false",
              "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers": [
              {
                "id": "151ef200-7131-41d9-b4fc-6cf53050214e",
                "name": "Client ID",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usersessionmodel-note-mapper",
                "consentRequired": false,
                "config": {
                  "user.session.note": "client_id",
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "client_id",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "497ef599-c1a2-4a6b-b2bf-51137567e87e",
                "name": "Client IP Address",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usersessionmodel-note-mapper",
                "consentRequired": false,
                "config": {
                  "user.session.note": "clientAddress",
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "clientAddress",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "7d3232ba-e98f-4788-a19e-11bec51a6194",
                "name": "Client Host",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usersessionmodel-note-mapper",
                "consentRequired": false,
                "config": {
                  "user.session.note": "clientHost",
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "clientHost",
                  "jsonType.label": "String"
                }
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "1e8d9504-7d55-49b4-ac6b-74e946984de2",
            "clientId": "epinaloa-backend-api",
            "name": "epinaloa Backend API",
            "description": "",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/*"
            ],
            "webOrigins": [
              "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": true,
            "protocol": "openid-connect",
            "attributes": {
              "oidc.ciba.grant.enabled": "false",
              "backchannel.logout.session.required": "true",
              "post.logout.redirect.uris": "+",
              "display.on.consent.screen": "false",
              "oauth2.device.authorization.grant.enabled": "false",
              "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "3142dd3a-8654-4c87-8b47-4545b271cc76",
            "clientId": "epinaloa-frontend-client",
            "name": "epinaloa Frontend Client",
            "description": "",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "http://localhost:8050/*",
              "http://localhost:3000/*",
              "https://ping.arffornia.com/*"
            ],
            "webOrigins": [
              "https://ping.arffornia.com",
              "http://localhost:8050",
              "http://localhost:3000"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": true,
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+",
              "oauth2.device.authorization.grant.enabled": "false",
              "backchannel.logout.revoke.offline.tokens": "false",
              "use.refresh.tokens": "true",
              "oidc.ciba.grant.enabled": "false",
              "client.use.lightweight.access.token.enabled": "false",
              "backchannel.logout.session.required": "true",
              "client_credentials.use_refresh_token": "false",
              "acr.loa.map": "{}",
              "require.pushed.authorization.requests": "false",
              "tls.client.certificate.bound.access.tokens": "false",
              "display.on.consent.screen": "false",
              "pkce.code.challenge.method": "S256",
              "token.response.type.bearer.lower-case": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers": [
              {
                "id": "91304e88-8ef9-4d24-9a4c-06d9c77417ec",
                "name": "backend-api-audience",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-mapper",
                "consentRequired": false,
                "config": {
                  "included.client.audience": "epinaloa-backend-api",
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "false",
                  "id.token.claim": "false",
                  "lightweight.claim": "false",
                  "access.token.claim": "true"
                }
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "efab0076-047e-4aec-8eb3-a7ac99b4d7d0",
            "clientId": "realm-management",
            "name": "${client_realm-management}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "81e12f9b-8319-4987-8c89-8c0e88e5bf68",
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/epinaloa/console/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/admin/epinaloa/console/*"
            ],
            "webOrigins": [
              "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+",
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "69449e15-c3da-49ad-a5fa-b06997bd1df4",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          }
        ],
        "clientScopes": [
          {
            "id": "5b23a278-8f1b-4301-903c-55766e33dfc5",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${profileScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "d98f9464-fba7-48bb-a0b0-fb903da06a3a",
                "name": "profile",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "profile",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "profile",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "7f78c48c-9e3d-4f9b-8ede-de3764937d39",
                "name": "full name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-full-name-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true"
                }
              },
              {
                "id": "e83cbdf3-ee63-4db4-8c90-f1a578c23e9e",
                "name": "gender",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "gender",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "gender",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "bd474be5-3f5e-44d7-94b8-4634763a9432",
                "name": "picture",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "picture",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "picture",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "8b0713d9-34d3-4ebd-91b8-536ffa9d7497",
                "name": "updated at",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "updatedAt",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "updated_at",
                  "jsonType.label": "long"
                }
              },
              {
                "id": "c90329fd-db48-47f5-bdb2-52f8cce36756",
                "name": "website",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "website",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "website",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "461f5bae-ecf0-4c31-ae76-342f594ccb29",
                "name": "middle name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "middleName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "middle_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "c9480e38-6302-4530-8d36-ad5bdb6f92ac",
                "name": "nickname",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "nickname",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "nickname",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "02d63545-ac90-4bfb-a864-5632e501e357",
                "name": "zoneinfo",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "zoneinfo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "zoneinfo",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "6afeac65-c1dc-4488-bae4-2c99c70849ed",
                "name": "username",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "preferred_username",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "3fb5585a-85d2-4f5b-b68f-0753354abff8",
                "name": "family name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "lastName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "family_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "713b598e-d363-4a72-b9bb-26f887ea70ae",
                "name": "given name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "firstName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "given_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "6a0c0cbb-42da-43de-8fb6-a163542f1c93",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "99b0e8d4-a72a-4fdb-896a-7eb45544d1dd",
                "name": "birthdate",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "birthdate",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "birthdate",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "b61bc6ab-6e41-4957-b149-647f0ea48e78",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${rolesScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "90f29d27-1a3b-4926-9ec4-d27237ae3109",
                "name": "client roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-client-role-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "multivalued": "true",
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "resource_access.${client_id}.roles",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "c4564155-a1fc-471f-a36f-169ca31293c6",
                "name": "realm roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "multivalued": "true",
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "realm_access.roles",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "ae0e3102-7ff7-40d8-ad90-172e16704920",
                "name": "audience resolve",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-resolve-mapper",
                "consentRequired": false,
                "config": {
                  "access.token.claim": "true",
                  "introspection.token.claim": "true"
                }
              }
            ]
          },
          {
            "id": "e77674c4-016c-4fc2-a8dd-dad7c1f745c9",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${addressScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "ad28360a-d3ed-4b92-8f29-063366e53e27",
                "name": "address",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-address-mapper",
                "consentRequired": false,
                "config": {
                  "user.attribute.formatted": "formatted",
                  "user.attribute.country": "country",
                  "introspection.token.claim": "true",
                  "user.attribute.postal_code": "postal_code",
                  "userinfo.token.claim": "true",
                  "user.attribute.street": "street",
                  "id.token.claim": "true",
                  "user.attribute.region": "region",
                  "access.token.claim": "true",
                  "user.attribute.locality": "locality"
                }
              }
            ]
          },
          {
            "id": "328c773f-7e27-4864-89e8-6ae591603cae",
            "name": "acr",
            "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "id": "71c72f46-ad0f-4020-950c-33b2ae4c6e84",
                "name": "acr loa level",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-acr-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true"
                }
              }
            ]
          },
          {
            "id": "f4635734-d059-47f9-8f24-5995ea7264f1",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
              "consent.screen.text": "${offlineAccessScopeConsentText}",
              "display.on.consent.screen": "true"
            }
          },
          {
            "id": "1c000e8d-4eea-41ce-954a-f9228577ffd6",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${phoneScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "610430b8-3224-479d-ad68-d78ffe1384c5",
                "name": "phone number verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumberVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number_verified",
                  "jsonType.label": "boolean"
                }
              },
              {
                "id": "8dfa5523-7d11-4dc7-bdf0-65953bc7c8a2",
                "name": "phone number",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumber",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "e6cad900-b6f9-47bb-a775-f9dc36635086",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
              "consent.screen.text": "${samlRoleListScopeConsentText}",
              "display.on.consent.screen": "true"
            },
            "protocolMappers": [
              {
                "id": "48a52859-b3fb-43b7-a097-f7071cbe34b2",
                "name": "role list",
                "protocol": "saml",
                "protocolMapper": "saml-role-list-mapper",
                "consentRequired": false,
                "config": {
                  "single": "false",
                  "attribute.nameformat": "Basic",
                  "attribute.name": "Role"
                }
              }
            ]
          },
          {
            "id": "ee008191-f5a3-4a25-8847-2597759ebac7",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "id": "21bfa1ff-2fa5-445b-bbfe-6d2f29a76fb8",
                "name": "upn",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "upn",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "a89fd564-ddd1-49a9-b98d-8e2256f79241",
                "name": "groups",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "multivalued": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "foo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "groups",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "816702bf-124d-4e5d-999e-797d33c3aa21",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${emailScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "5c93891b-5363-42bb-a3cf-5cd09ac1a35e",
                "name": "email verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "emailVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email_verified",
                  "jsonType.label": "boolean"
                }
              },
              {
                "id": "3a32ad56-2617-463a-954c-4d48b6b80de8",
                "name": "email",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "email",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "ddec04be-9184-4695-90d1-776d3c0c5534",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "false",
              "consent.screen.text": ""
            },
            "protocolMappers": [
              {
                "id": "6d6a3ccd-baf7-4ce5-b94d-bfab75082e4c",
                "name": "allowed web origins",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-allowed-origins-mapper",
                "consentRequired": false,
                "config": {
                  "access.token.claim": "true",
                  "introspection.token.claim": "true"
                }
              }
            ]
          }
        ],
        "defaultDefaultClientScopes": [
          "role_list",
          "profile",
          "email",
          "roles",
          "web-origins",
          "acr"
        ],
        "defaultOptionalClientScopes": [
          "offline_access",
          "address",
          "phone",
          "microprofile-jwt"
        ],
        "browserSecurityHeaders": {
          "contentSecurityPolicyReportOnly": "",
          "xContentTypeOptions": "nosniff",
          "referrerPolicy": "no-referrer",
          "xRobotsTag": "none",
          "xFrameOptions": "SAMEORIGIN",
          "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
          "xXSSProtection": "1; mode=block",
          "strictTransportSecurity": "max-age=31536000; includeSubDomains"
        },
        "smtpServer": {},
        "eventsEnabled": false,
        "eventsListeners": [
          "jboss-logging"
        ],
        "enabledEventTypes": [],
        "adminEventsEnabled": false,
        "adminEventsDetailsEnabled": false,
        "identityProviders": [],
        "identityProviderMappers": [],
        "components": {
          "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
              "id": "f4411370-729a-4af4-9a41-835e4dcf636c",
              "name": "Allowed Client Scopes",
              "providerId": "allowed-client-templates",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "allow-default-scopes": [
                  "true"
                ]
              }
            },
            {
              "id": "fc572b03-584e-441b-8d28-f51fa1d35b6f",
              "name": "Trusted Hosts",
              "providerId": "trusted-hosts",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "host-sending-registration-request-must-match": [
                  "true"
                ],
                "client-uris-must-match": [
                  "true"
                ]
              }
            },
            {
              "id": "066004a6-67f1-464d-8cb2-64629bb28a8a",
              "name": "Allowed Client Scopes",
              "providerId": "allowed-client-templates",
              "subType": "authenticated",
              "subComponents": {},
              "config": {
                "allow-default-scopes": [
                  "true"
                ]
              }
            },
            {
              "id": "5ff4633e-5a6b-4dac-9b33-48491b17d117",
              "name": "Max Clients Limit",
              "providerId": "max-clients",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "max-clients": [
                  "200"
                ]
              }
            },
            {
              "id": "8a063142-25fa-48b9-b449-c5765109d218",
              "name": "Allowed Protocol Mapper Types",
              "providerId": "allowed-protocol-mappers",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "allowed-protocol-mapper-types": [
                  "saml-user-attribute-mapper",
                  "oidc-usermodel-attribute-mapper",
                  "oidc-usermodel-property-mapper",
                  "oidc-sha256-pairwise-sub-mapper",
                  "oidc-full-name-mapper",
                  "saml-user-property-mapper",
                  "saml-role-list-mapper",
                  "oidc-address-mapper"
                ]
              }
            },
            {
              "id": "08854e7e-a5e6-4ad6-9bc8-9975d2c85a67",
              "name": "Consent Required",
              "providerId": "consent-required",
              "subType": "anonymous",
              "subComponents": {},
              "config": {}
            },
            {
              "id": "713f75d4-8064-4d8b-9754-a2c85ac054b1",
              "name": "Full Scope Disabled",
              "providerId": "scope",
              "subType": "anonymous",
              "subComponents": {},
              "config": {}
            },
            {
              "id": "f7f93680-d132-4c79-8281-7033c44c88c2",
              "name": "Allowed Protocol Mapper Types",
              "providerId": "allowed-protocol-mappers",
              "subType": "authenticated",
              "subComponents": {},
              "config": {
                "allowed-protocol-mapper-types": [
                  "saml-role-list-mapper",
                  "oidc-sha256-pairwise-sub-mapper",
                  "saml-user-attribute-mapper",
                  "oidc-address-mapper",
                  "oidc-usermodel-property-mapper",
                  "saml-user-property-mapper",
                  "oidc-usermodel-attribute-mapper",
                  "oidc-full-name-mapper"
                ]
              }
            }
          ],
          "org.keycloak.keys.KeyProvider": [
            {
              "id": "6a94d277-ee93-4ee4-b545-362bb1d173b7",
              "name": "rsa-enc-generated",
              "providerId": "rsa-enc-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ],
                "algorithm": [
                  "RSA-OAEP"
                ]
              }
            },
            {
              "id": "6a099304-55c1-47c1-ac96-ac6201bf5f95",
              "name": "hmac-generated-hs512",
              "providerId": "hmac-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ],
                "algorithm": [
                  "HS512"
                ]
              }
            },
            {
              "id": "ef8ce16e-d473-4513-8c2f-6d7bac928a7d",
              "name": "rsa-generated",
              "providerId": "rsa-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ]
              }
            },
            {
              "id": "ae966fef-773d-4454-b51d-908e18625e9d",
              "name": "aes-generated",
              "providerId": "aes-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ]
              }
            }
          ]
        },
        "internationalizationEnabled": false,
        "supportedLocales": [],
        "authenticationFlows": [
          {
            "id": "1c1dac5e-ed2f-4911-90b7-5a9a5eae2ab0",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-email-verification",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "Verify Existing Account by Re-authentication",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "23d7b296-145f-43dd-8342-084660fdb453",
            "alias": "Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "0efafd03-6904-48fa-ab15-ecd43bd04e31",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "direct-grant-validate-otp",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "4b5aa19e-529d-4552-b5db-fc0ea862db1a",
            "alias": "First broker login - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "ed31ee33-1da2-47dc-863e-2389c61825cd",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-confirm-link",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "Account verification options",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "7b5e2ad5-e4d8-4fb4-8d9a-285947f6df94",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "reset-otp",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "7392d7ff-3097-4f7c-8233-cd79fd499fbc",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticatorConfig": "create unique user config",
                "authenticator": "idp-create-user-if-unique",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "Handle Existing Account",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "bb54df32-458e-4266-aba3-2269bca8cab3",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-username-password-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "First broker login - Conditional OTP",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "38657f52-01d1-41a5-8aad-b26ac6e276be",
            "alias": "browser",
            "description": "browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "auth-cookie",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "auth-spnego",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "identity-provider-redirector",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 25,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "autheticatorFlow": true,
                "flowAlias": "forms",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "01c54825-fa37-4ca5-8d63-44c6462fc0b6",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "client-secret",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "client-jwt",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "client-secret-jwt",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "client-x509",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 40,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "a7cadf51-97e0-4ec6-bfd5-80a5d50863f4",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "direct-grant-validate-username",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "direct-grant-validate-password",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 30,
                "autheticatorFlow": true,
                "flowAlias": "Direct Grant - Conditional OTP",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "5ddf2eb1-8d63-4f30-b330-9d50db6da58c",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "docker-http-basic-authenticator",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "de8cc25b-4717-4206-a40c-e9508e71ea5f",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticatorConfig": "review profile config",
                "authenticator": "idp-review-profile",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "User creation or linking",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "4b28742c-93ae-401b-ac7e-8aa4f58ee222",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "auth-username-password-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "Browser - Conditional OTP",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "4c3d8acd-6a46-4fb3-aa9a-c12ba04f8e4b",
            "alias": "registration",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "registration-page-form",
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": true,
                "flowAlias": "registration form",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "961fe45d-55da-4fb0-9189-8aa412573e60",
            "alias": "registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "registration-user-creation",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "registration-password-action",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 50,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "registration-recaptcha-action",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 60,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "registration-terms-and-conditions",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 70,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "297cae84-08f0-4467-b49c-3c0073354e48",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "reset-credentials-choose-user",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "reset-credential-email",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "reset-password",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 30,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 40,
                "autheticatorFlow": true,
                "flowAlias": "Reset - Conditional OTP",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "6b08801e-2057-437d-9aa1-8de16c92a520",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "http-basic-authenticator",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          }
        ],
        "authenticatorConfig": [
          {
            "id": "4cad556e-674c-43d4-9063-08e99a3e49f8",
            "alias": "create unique user config",
            "config": {
              "require.password.update.after.registration": "false"
            }
          },
          {
            "id": "5596727c-e5ce-40f9-9130-bf089a461557",
            "alias": "review profile config",
            "config": {
              "update.profile.on.first.login": "missing"
            }
          }
        ],
        "requiredActions": [
          {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 10,
            "config": {}
          },
          {
            "alias": "TERMS_AND_CONDITIONS",
            "name": "Terms and Conditions",
            "providerId": "TERMS_AND_CONDITIONS",
            "enabled": false,
            "defaultAction": false,
            "priority": 20,
            "config": {}
          },
          {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": false,
            "defaultAction": false,
            "priority": 30,
            "config": {}
          },
          {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": false,
            "defaultAction": false,
            "priority": 40,
            "config": {}
          },
          {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": false,
            "defaultAction": false,
            "priority": 50,
            "config": {}
          },
          {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": false,
            "defaultAction": false,
            "priority": 60,
            "config": {}
          },
          {
            "alias": "webauthn-register",
            "name": "Webauthn Register",
            "providerId": "webauthn-register",
            "enabled": true,
            "defaultAction": false,
            "priority": 70,
            "config": {}
          },
          {
            "alias": "webauthn-register-passwordless",
            "name": "Webauthn Register Passwordless",
            "providerId": "webauthn-register-passwordless",
            "enabled": true,
            "defaultAction": false,
            "priority": 80,
            "config": {}
          },
          {
            "alias": "VERIFY_PROFILE",
            "name": "Verify Profile",
            "providerId": "VERIFY_PROFILE",
            "enabled": false,
            "defaultAction": false,
            "priority": 90,
            "config": {}
          },
          {
            "alias": "delete_credential",
            "name": "Delete Credential",
            "providerId": "delete_credential",
            "enabled": true,
            "defaultAction": false,
            "priority": 100,
            "config": {}
          },
          {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": true,
            "defaultAction": false,
            "priority": 1000,
            "config": {}
          }
        ],
        "browserFlow": "browser",
        "registrationFlow": "registration",
        "directGrantFlow": "direct grant",
        "resetCredentialsFlow": "reset credentials",
        "clientAuthenticationFlow": "clients",
        "dockerAuthenticationFlow": "docker auth",
        "firstBrokerLoginFlow": "first broker login",
        "attributes": {
          "cibaBackchannelTokenDeliveryMode": "poll",
          "cibaExpiresIn": "120",
          "cibaAuthRequestedUserHint": "login_hint",
          "oauth2DeviceCodeLifespan": "600",
          "clientOfflineSessionMaxLifespan": "0",
          "oauth2DevicePollingInterval": "5",
          "clientSessionIdleTimeout": "0",
          "parRequestUriLifespan": "60",
          "clientSessionMaxLifespan": "0",
          "clientOfflineSessionIdleTimeout": "0",
          "cibaInterval": "5",
          "realmReusableOtpCode": "false"
        },
        "keycloakVersion": "24.0.5",
        "userManagedAccessAllowed": false,
        "clientProfiles": {
          "profiles": []
        },
        "clientPolicies": {
          "policies": []
        }
      }
